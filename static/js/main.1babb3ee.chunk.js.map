{"version":3,"sources":["logo.svg","contexts/ResultPageContext.jsx","ResultPage/ResultPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ResultPageContext","React","createContext","ResultPageProvider","props","useState","occupation","onet","title","region","id","type","summary","earnings","regional","national_avg","jobs","year","jobs_growth","start_year","end_year","trend_comparison","nation","state","employing_industries","industries","resultData","setResultData","Provider","value","getResultData","console","log","fetch","method","headers","Headers","Accept","then","r","json","children","ResultPage","resultPageContext","useContext","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAe,I,YCEFA,EAAoBC,IAAMC,cAAc,MA2EtCC,MArEf,SAA4BC,GAAQ,IAAD,EAEKC,mBAAS,CACzCC,WAAY,CACRC,KAAM,UACNC,MAAO,WAEXC,OAAQ,CACJC,GAAI,UACJF,MAAO,UACPG,KAAM,WAEVC,QAAS,CACLC,SAAU,CACNC,SAAU,EACVC,aAAc,GAElBC,KAAM,CACFC,KAAM,EACNH,SAAU,EACVC,aAAc,GAElBG,YAAa,CACTC,WAAY,EACZC,SAAU,EACVN,SAAU,IAGlBO,iBAAkB,CACdD,SAAU,EACVE,OAAQ,GACRR,SAAU,GACVK,WAAY,EACZI,MAAO,IAEXC,qBAAsB,CAClBC,WAAY,GACZT,KAAM,EACNC,KAAM,KAtCiB,mBAExBS,EAFwB,KAEZC,EAFY,KA2D/B,OACI,cAAC3B,EAAkB4B,SAAnB,CAA4BC,MAAO,CAC/BH,aACAI,cApBR,WACIC,QAAQC,IAAI,uBACZC,MAAM,+DAAgE,CAClEC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjB,eAAgB,mBAChBC,OAAQ,uBAEbC,MAAK,SAAAC,GACJ,OAAOA,EAAEC,UACVF,MAAK,SAAAC,GACJR,QAAQC,IAAIO,GACZZ,EAAcY,GACdR,QAAQC,IAAI,wBAKhB,SAIC5B,EAAMqC,Y,YCnEA,SAASC,EAAYtC,GAEhC,IAAMuC,EDFCC,qBAAW5C,GCSlB,OAJA6C,qBAAU,WACNF,EAAkBb,kBACnB,IAGC,sBAAKpB,GAAG,oBAAR,UACI,qBAAKA,GAAG,kBAAR,iCACA,sBAAKA,GAAG,qBAAR,UACKiC,EAAkBjB,WAAWpB,WAAWE,MAD7C,OACwDmC,EAAkBjB,WAAWjB,OAAOD,SAG5F,sBAAKE,GAAG,yBAAR,oCAAyDiC,EAAkBjB,WAAWpB,WAAWE,SAEjG,qBAAKE,GAAG,yBAAR,6BAEA,sBAAKA,GAAG,yBAAR,kCAAuDiC,EAAkBjB,WAAWpB,WAAWE,YCV5FsC,MAVf,WACE,OACE,8BACE,cAAC,EAAD,UACA,cAAC,EAAD,SCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1babb3ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {useState, useContext} from 'react'\r\n\r\nexport const ResultPageContext = React.createContext(null)\r\n\r\nexport function useResultPageContext() {\r\n    return useContext(ResultPageContext)\r\n}\r\n\r\nfunction ResultPageProvider(props) {\r\n\r\n    const [resultData, setResultData] = useState({\r\n        occupation: {\r\n            onet: \"default\",\r\n            title: \"default\"\r\n        },\r\n        region: {\r\n            id: \"default\",\r\n            title: \"default\",\r\n            type: \"default\"\r\n        },\r\n        summary: {\r\n            earnings: {\r\n                regional: 0,\r\n                national_avg: 0,\r\n            },\r\n            jobs: {\r\n                year: 0,\r\n                regional: 0,\r\n                national_avg: 0\r\n            },\r\n            jobs_growth: {\r\n                start_year: 0,\r\n                end_year: 0,\r\n                regional: 0\r\n            }\r\n        },\r\n        trend_comparison: {\r\n            end_year: 0,\r\n            nation: [],\r\n            regional: [],\r\n            start_year: 0,\r\n            state: []\r\n        },\r\n        employing_industries: {\r\n            industries: [],\r\n            jobs: 0,\r\n            year: 0\r\n        }  \r\n    })\r\n\r\n    function getResultData() {\r\n        console.log(\"getting result data\")\r\n        fetch(\"https://run.mocky.io/v3/a2cc3707-8691-4188-8413-6183a7bb3d32\", {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\"\r\n            })\r\n        }).then(r => {\r\n            return r.json()\r\n        }).then(r => {\r\n            console.log(r)\r\n            setResultData(r)\r\n            console.log(\"got result data\")\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ResultPageContext.Provider value={{\r\n            resultData,\r\n            getResultData,\r\n        }}>\r\n        {props.children}\r\n        </ResultPageContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ResultPageProvider","import React, {useState, useEffect} from 'react'\r\nimport { useResultPageContext } from '../contexts/ResultPageContext'\r\nimport './css/ResultPage.css'\r\nimport './css/Variables.css'\r\n\r\nexport default function ResultPage (props) {\r\n\r\n    const resultPageContext = useResultPageContext()\r\n\r\n    //gets json data once on page load\r\n    useEffect(() => {\r\n        resultPageContext.getResultData()\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"ResultPageContent\">\r\n            <div id=\"ResultPageTitle\">Occupation Overview</div>\r\n            <div id=\"ResultPageSubTitle\">\r\n                {resultPageContext.resultData.occupation.title} in {resultPageContext.resultData.region.title}\r\n            </div>\r\n\r\n            <div id=\"ResultPageSectionTitle\">Occupation Summary for {resultPageContext.resultData.occupation.title}</div>\r\n\r\n            <div id=\"ResultPageSectionTitle\">Regional Trends</div>\r\n\r\n            <div id=\"ResultPageSectionTitle\">Industries Employing {resultPageContext.resultData.occupation.title}</div>\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport ResultPage from './ResultPage/ResultPage';\nimport ResultPageProvider from './contexts/ResultPageContext';\n\nfunction App() {\n  return (\n    <div>\n      <ResultPageProvider>\n      <ResultPage/>\n      </ResultPageProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}