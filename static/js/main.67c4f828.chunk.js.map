{"version":3,"sources":["logo.svg","contexts/ResultPageContext.jsx","icons/triangle.svg","icons/circle.svg","icons/square.svg","ResultPage/modules/GraphTable.jsx","ResultPage/modules/Summary.jsx","ResultPage/modules/Table.jsx","ResultPage/ResultPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ResultPageContext","React","createContext","ResultPageProvider","props","useState","occupation","onet","title","region","id","type","summary","earnings","regional","national_avg","jobs","year","jobs_growth","start_year","end_year","trend_comparison","nation","state","employing_industries","industries","resultData","setResultData","Provider","value","getResultData","console","log","fetch","method","headers","Headers","Accept","then","r","json","children","GraphTable","renderRow","val1","val2","val3","val4","val5","textStyle","icon","trendComparison","src","triangle","length","circle","square","Summary","jobsComparisonPercent","jobsComparison","jobsGrowthRegional","jobsGrowthNational","Table","employingIndustries","i","rows","push","in_occupation_jobs","toFixed","renderIndustryRows","ResultPage","resultPageContext","useContext","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67c4f828.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {useState, useContext} from 'react'\r\n\r\nexport const ResultPageContext = React.createContext(null)\r\n\r\nexport function useResultPageContext() {\r\n    return useContext(ResultPageContext)\r\n}\r\n\r\nfunction ResultPageProvider(props) {\r\n\r\n    const [resultData, setResultData] = useState({\r\n        occupation: {\r\n            onet: \"default\",\r\n            title: \"default\"\r\n        },\r\n        region: {\r\n            id: \"default\",\r\n            title: \"default\",\r\n            type: \"default\"\r\n        },\r\n        summary: {\r\n            earnings: {\r\n                regional: 0,\r\n                national_avg: 0,\r\n            },\r\n            jobs: {\r\n                year: 0,\r\n                regional: 0,\r\n                national_avg: 0,\r\n            },\r\n            jobs_growth: {\r\n                start_year: 0,\r\n                end_year: 0,\r\n                regional: 0,\r\n            }\r\n        },\r\n        trend_comparison: {\r\n            end_year: 0,\r\n            nation: [],\r\n            regional: [],\r\n            start_year: 0,\r\n            state: []\r\n        },\r\n        employing_industries: {\r\n            industries: [],\r\n            jobs: 0,\r\n            year: 0,\r\n        }  \r\n    })\r\n\r\n    function getResultData() {\r\n        console.log(\"getting result data\")\r\n        fetch(\"https://run.mocky.io/v3/a2cc3707-8691-4188-8413-6183a7bb3d32\", {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\"\r\n            })\r\n        }).then(r => {\r\n            return r.json()\r\n        }).then(r => {\r\n            console.log(r)\r\n            setResultData(r)\r\n            console.log(\"got result data\")\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ResultPageContext.Provider value={{\r\n            resultData,\r\n            getResultData,\r\n        }}>\r\n        {props.children}\r\n        </ResultPageContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ResultPageProvider","export default __webpack_public_path__ + \"static/media/triangle.35e80a8b.svg\";","export default __webpack_public_path__ + \"static/media/circle.73f4c070.svg\";","export default __webpack_public_path__ + \"static/media/square.c38d573c.svg\";","import React from 'react'\r\nimport '../css/GraphTable.css'\r\nimport triangle from '../../icons/triangle.svg'\r\nimport circle from '../../icons/circle.svg'\r\nimport square from '../../icons/square.svg'\r\n\r\nexport default function GraphTable (props) {\r\n\r\n    console.log(props.trendComparison)\r\n    function renderRow(val1, val2, val3, val4, val5, textStyle, icon) {\r\n        return (\r\n            <span id=\"TableRow\">\r\n                    <span id=\"GraphTableEntryLeft\"><span id={textStyle}>{icon}<span id=\"GraphTableTextPadding\">{val1}</span></span></span>\r\n                    <span id=\"GraphTableEntry\"><span id={textStyle}>{val2}</span></span>\r\n                    <span id=\"GraphTableEntry\"><span id={textStyle}>{val3}</span></span>\r\n                    <span id=\"GraphTableEntry\"><span id={textStyle}>{val4}</span></span>\r\n                    <span id=\"GraphTableEntry\"><span id={textStyle}>{val5}</span></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"GraphTable\">\r\n            {renderRow(\"Area\", props.trendComparison.start_year + \" Jobs\", props.trendComparison.end_year + \" Jobs\", \"Change\", \"%Change\", \"Text2Bold\", <img id=\"GraphTableIconPlaceholder\" src={triangle}/>)}\r\n            {renderRow(\"Region\", props.trendComparison.regional[0], props.trendComparison.regional[props.trendComparison.regional.length - 1],\r\n            (props.trendComparison.regional[props.trendComparison.regional.length - 1] - props.trendComparison.regional[0]),\r\n            ((props.trendComparison.regional[props.trendComparison.regional.length - 1] - props.trendComparison.regional[0]) / props.trendComparison.regional[0] * 100), \"Text2\", <img id=\"GraphTableIcon\" src={circle}/>)}\r\n\r\n            {renderRow(\"State\", props.trendComparison.state[0], props.trendComparison.state[props.trendComparison.state.length - 1],\r\n            (props.trendComparison.state[props.trendComparison.state.length - 1] - props.trendComparison.state[0]),\r\n            ((props.trendComparison.state[props.trendComparison.state.length - 1] - props.trendComparison.state[0]) / props.trendComparison.state[0] * 100), \"Text2\", <img id=\"GraphTableIcon\" src={square}/>)}\r\n        \r\n            {renderRow(\"Nation\", props.trendComparison.nation[0], props.trendComparison.nation[props.trendComparison.nation.length - 1],\r\n            (props.trendComparison.nation[props.trendComparison.nation.length - 1] - props.trendComparison.nation[0]),\r\n            ((props.trendComparison.nation[props.trendComparison.nation.length - 1] - props.trendComparison.nation[0]) / props.trendComparison.nation[0] * 100), \"Text2\", <img id=\"GraphTableIcon\" src={triangle}/>)}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport '../css/Summary.css'\r\n\r\nexport default function Summary (props) {\r\n    let jobsComparisonPercent = props.summary.jobs.regional / props.summary.jobs.national_avg * 100\r\n    let jobsComparison = <div>{jobsComparisonPercent}% <span id=\"GreenText\">above</span> national average</div>\r\n    if (jobsComparisonPercent < 0) jobsComparison = <div>{(-jobsComparisonPercent)}% <span id=\"RedText\">below</span> national average</div>\r\n    \r\n    let jobsGrowthRegional = <span id=\"GreenText\">+{props.summary.jobs_growth.regional}%</span>\r\n    if (props.summary.jobs_growth.regional < 0) jobsGrowthRegional = <span id=\"RedText\">-{-props.summary.jobs_growth.regional}</span>\r\n    \r\n    let jobsGrowthNational =  <div>Nation <span id=\"GreenText\">+{props.summary.jobs_growth.national_avg}%</span></div>\r\n    if (props.summary.jobs_growth.national_avg < 0) <div>Nation <span id=\"RedText\">-{props.summary.jobs_growth.national_avg}%</span></div>\r\n\r\n    return (\r\n        <div id=\"Summary\">\r\n\r\n            <span id=\"SummaryBoxLeft\">\r\n                <div id=\"Text1\">{props.summary.jobs.regional}</div>\r\n                <div id=\"Text2Bold\">Jobs ({props.summary.jobs.year})</div>\r\n                <div id=\"Text2\">{jobsComparison}</div>\r\n            </span>\r\n\r\n            <span id=\"SummaryBoxCenter\">\r\n                <div id=\"Text1\">{jobsGrowthRegional}</div>\r\n                <div id=\"Text2Bold\">%Change ({props.summary.jobs_growth.start_year}-{props.summary.jobs_growth.end_year}) </div>\r\n                <div id=\"Text2\">{jobsGrowthNational}</div>\r\n            </span>\r\n\r\n            <span id=\"SummaryBoxRight\">\r\n                <div id=\"Text1\">${props.summary.earnings.regional}/hr</div>\r\n                <div id=\"Text2Bold\">Median Hourly Earnings</div>\r\n                <div id=\"Text2\">Nation: ${props.summary.earnings.national_avg}/hr</div>\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport '../css/Table.css'\r\n\r\nexport default function Table (props) {\r\n\r\n    const [industryRows, setIndustryRows] = useState([])\r\n\r\n    console.log(props.trendComparison)\r\n    function renderRow(val1, val2, val3, val4, textStyle) {\r\n        return (\r\n            <span id=\"TableRow\">\r\n                    <span id=\"TableEntryLeft\"><span id={textStyle}>{val1}</span></span>\r\n                    <span id=\"TableEntry\"><span id={textStyle}>{val2}</span></span>\r\n                    <span id=\"TableEntry\"><span id={textStyle}>{val3}</span></span>\r\n                    <span id=\"TableEntry\"><span id={textStyle}>{val4}</span></span>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    function renderIndustryRows(employingIndustries) {\r\n        let totalJobs = 0;\r\n        for (let i = 0; i < employingIndustries.industries.length; i++) {\r\n            totalJobs = totalJobs + employingIndustries.industries[i].jobs\r\n        }\r\n        let rows = []\r\n        for (let i = 0; i < employingIndustries.industries.length; i++) {\r\n            rows.push(\r\n                <div>\r\n                {renderRow(\r\n                    employingIndustries.industries[i].title, \r\n                    employingIndustries.industries[i].in_occupation_jobs,\r\n                    (employingIndustries.industries[i].in_occupation_jobs / employingIndustries.jobs * 100).toFixed(1) + \"%\",\r\n                    (employingIndustries.industries[i].in_occupation_jobs / employingIndustries.industries[i].jobs * 100).toFixed(1) + \"%\",\r\n                    \"Text2\"\r\n                )}\r\n                </div>\r\n            )\r\n        }\r\n        return (rows)\r\n    }\r\n\r\n    return (\r\n        <div id=\"Table\">\r\n            {renderRow(\"Industry\", \"Occupation Jobs in Industry (\" + props.employingIndustries.year + \")\", \r\n            \"Percent of Occupation in Industry (\" + props.employingIndustries.year + \")\", \r\n            \"Percent of Total Jobs in Industry (\" + props.employingIndustries.year + \")\", \"Text2Bold\")}\r\n\r\n            {renderIndustryRows(props.employingIndustries)}\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { useResultPageContext } from '../contexts/ResultPageContext'\r\nimport './css/ResultPage.css'\r\nimport './css/Variables.css'\r\nimport GraphTable from './modules/GraphTable'\r\nimport Summary from './modules/Summary'\r\nimport Table from './modules/Table'\r\n\r\nexport default function ResultPage (props) {\r\n\r\n    const resultPageContext = useResultPageContext()\r\n\r\n    //gets json data once on page load\r\n    useEffect(() => {\r\n        resultPageContext.getResultData()\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"ResultPageContent\">\r\n            <div id=\"ResultPageTitle\">Occupation Overview</div>\r\n            <div id=\"ResultPageSubTitle\">\r\n                {resultPageContext.resultData.occupation.title} in {resultPageContext.resultData.region.title}\r\n            </div>\r\n\r\n            <div id=\"ResultPageSectionTitle\">Occupation Summary for {resultPageContext.resultData.occupation.title}</div>\r\n            <Summary\r\n                summary={resultPageContext.resultData.summary}\r\n            />\r\n\r\n            <GraphTable\r\n                trendComparison={resultPageContext.resultData.trend_comparison}\r\n            />\r\n\r\n            <Table\r\n                employingIndustries={resultPageContext.resultData.employing_industries}\r\n            />\r\n\r\n            <div id=\"ResultPageSectionTitle\">Regional Trends</div>\r\n\r\n            <div id=\"ResultPageSectionTitle\">Industries Employing {resultPageContext.resultData.occupation.title}</div>\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport ResultPage from './ResultPage/ResultPage';\nimport ResultPageProvider from './contexts/ResultPageContext';\n\nfunction App() {\n  return (\n    <div>\n      <ResultPageProvider>\n      <ResultPage/>\n      </ResultPageProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}